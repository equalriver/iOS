//
//  WLKTNewsVideoDetailVC.m
//  wlkt
//
//  Created by nanbojiaoyu on 2018/1/8.
//  Copyright © 2018年 neimbo. All rights reserved.
//

#import "WLKTNewsVideoDetailVC.h"
#import "WLKTSchoolNewsDetailBottomBtns.h"
#import "WLKTNewsDetailCommentCell.h"
#import "WLKTSchoolNewsDetailCommentAlertView.h"
#import "WLKTSchoolNewsDetailMsgCell.h"

#import "WLKTNewsDetailData.h"
#import "WLKTNewsDetailReplyList.h"

#import "WLKTSchoolCommentReportApi.h"
#import "WLKTSchoolCommentGoReportVC.h"

#import "WLKTSchoolNewsCollectApi.h"
#import "WLKTSchoolNewsCollectCancelApi.h"
#import "WLKTLogin.h"
#import "WLKTSchoolNewsGoReportVC.h"
#import "WLKTSchoolNewsDetailLikeApi.h"
#import "WLKTSchoolCommentLikeApi.h"
#import "WLKTSchoolGoCommentApi.h"
#import "WLKTNewsDetailCommentReply.h"
#import "WLKTNewsDetailApi.h"
#import "WLKTNewsDetailMoreCommentApi.h"
#import "WLKTNewsCommentReplyVC.h"
#import "WLKTCommentReplyApi.h"
#import <AliyunVodPlayerViewSDK/AliyunVodPlayerViewSDK.h>
#import "WLKTCustomShare.h"
#import "WLKTGetVideoTokenApi.h"
#import "WLKTGetVideoTokenData.h"
#import <sys/utsname.h>

@interface WLKTNewsVideoDetailVC ()<UITableViewDelegate, UITableViewDataSource, SchoolNewsDetailBottomDelegate, NewsDetailCommentCellDelegate, SchoolNewsDetailCommentAlertDelegate, UIWebViewDelegate, SchoolNewsDetailMsgDelegate, NewsDetailCommentReplyDelegate, AliyunVodPlayerViewDelegate>
@property (strong, nonatomic) UITableView *tableView;
@property (strong, nonatomic) WLKTSchoolNewsDetailMsgCell *msgCell;
@property (strong, nonatomic) WLKTSchoolNewsDetailBottomBtns *bottombtns;
@property (strong, nonatomic) AliyunVodPlayerView *playerView;
@property (nonatomic, strong)NSTimer *timer;
@property (nonatomic, assign) BOOL isLock;
@property (nonatomic, assign) BOOL isStatusHidden;
@property (assign) BOOL isLoadWeb;
@property (assign) CGFloat webHeight;
@property (copy, nonatomic) NSString *nid;
@property (strong, nonatomic) WLKTNewsDetailData *data;
@property (strong, nonatomic) NSMutableArray<WLKTNewsDetailReplyList *> *commentArr;
@property (assign) NSInteger page;
@property (nonatomic, assign) BOOL isCommentReload;

@end

#define kWebHeight ScreenHeight - 50
#define VIEWSAFEAREAINSETS(view) ({UIEdgeInsets i; if(@available(iOS 11.0, *)) {i = view.safeAreaInsets;} else {i = UIEdgeInsetsZero;} i;})

@implementation WLKTNewsVideoDetailVC
- (instancetype)initWithNewsId:(NSString *)nid
{
    self = [super init];
    if (self) {
        _nid = nid;
        [self.view addSubview:self.tableView];
        [self.view addSubview:self.bottombtns];
        [self makeConstraints];
    }
    return self;
}

- (void)makeConstraints{
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.width.mas_equalTo(self.view);
        make.bottom.mas_equalTo(self.bottombtns.mas_top);
    }];
    [self.bottombtns mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(ScreenWidth, 50));
        make.top.mas_equalTo(self.tableView.mas_bottom);
        make.left.mas_equalTo(self.view);
        make.bottom.mas_equalTo(self.view.mas_bottom);
    }];

}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.webHeight = kWebHeight;
    self.page = 1;
    UIBarButtonItem *share = [[UIBarButtonItem alloc]initWithImage:[UIImage imageNamed:@"分享b"] style:UIBarButtonItemStylePlain target:self action:@selector(shareAct)];
    self.navigationItem.rightBarButtonItem = share;
    
    self.playerView = [[AliyunVodPlayerView alloc] initWithFrame:CGRectMake(0,0, ScreenWidth, ScreenWidth * 9/16.0) andSkin:AliyunVodPlayerViewSkinRed];
    self.tableView.tableHeaderView = self.playerView;
    [self loadData];
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:YES animated:NO];
}

- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    [self.navigationController setNavigationBarHidden:NO animated:NO];
    if (self.playerView != nil) {
        [self.playerView pause];
//        [self.playerView releasePlayer];
//        [self.playerView removeFromSuperview];
//        self.playerView = nil;
    }
}

- (void)dealloc{
    if (self.playerView != nil) {
        [self.playerView stop];
        [self.playerView releasePlayer];
        [self.playerView removeFromSuperview];
        self.playerView = nil;
    }
}

- (void)setPlayerViewData:(WLKTNewsDetailData *)data token:(WLKTGetVideoTokenData *)token{
    //测试封面地址，请使用https 地址。
//    self.playerView.coverUrl = [NSURL URLWithString:@"https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=4046104436,1338839104&fm=27&gp=0.jpg"];
    [self.playerView setTitle:data.title];
    self.playerView.isScreenLocked = NO;
    self.playerView.fixedPortrait = NO;
    self.isLock = self.playerView.isScreenLocked || self.playerView.fixedPortrait ? YES : NO;
//    self.playerView.circlePlay = YES;
    [self.playerView setDelegate:self];
    [self.playerView setAutoPlay:YES];
    //边下边播缓存沙箱位置
    NSArray *pathArray = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *docDir = [pathArray objectAtIndex:0];
    //maxsize:单位 mb    maxDuration:单位秒 ,在prepare之前调用。
    [self.playerView setPlayingCache:YES saveDir:docDir maxSize:100 maxDuration:5000];
    
//    //隐藏全屏显示按钮
//    if (self.playerView.subviews.count > 2) {
//        NSArray *arr = self.playerView.subviews[2].subviews;
//        for (UIView *v in arr) {
//            if (v.tag == 2) {
//                v.hidden = YES;
//            }
//        }
//    }
    
    //查看缓存文件时打开。
//    self.timer = [NSTimer scheduledTimerWithTimeInterval:5 target:self selector:@selector(timerun) userInfo:nil repeats:YES];
    
    //播放器播放方式
    [self.playerView playViewPrepareWithVid:data.video accessKeyId:token.AccessKeyId accessKeySecret:token.AccessKeySecret securityToken:token.SecurityToken];
    
}

- (void)loadData{
    self.tableView.state = WLKTViewStateLoading;
    WLKTNewsDetailApi *api = [[WLKTNewsDetailApi alloc]initWithNewsId:self.nid];
    [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
        self.tableView.state = WLKTViewStateNormal;
        self.data = [WLKTNewsDetailData modelWithJSON:request.responseJSONObject[@"result"][@"info"]];
        NSArray *arr = [NSArray modelArrayWithClass:[WLKTNewsDetailReplyList class] json:request.responseJSONObject[@"result"][@"list"]];
        [self.commentArr removeAllObjects];
        [self.commentArr addObjectsFromArray:arr];
        if (self.data) {
            
            WLKTGetVideoTokenApi *api = [[WLKTGetVideoTokenApi alloc]init];
            [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
                WLKTGetVideoTokenData *data = [WLKTGetVideoTokenData modelWithJSON:request.responseJSONObject[@"Credentials"]];
                if (data && !self.isCommentReload) {
                    [self setPlayerViewData:self.data token:data];
                    
                }
            } failure:^(__kindof YTKBaseRequest *request) {

            }];
    
            [self.tableView reloadData];

        }
    } failure:^(__kindof YTKBaseRequest *request) {
        self.tableView.state = WLKTViewStateError;
        WS(weakSelf);
        self.tableView.emptyButtonClickBlock = ^{
            [weakSelf loadData];
        };
    }];
}

#pragma mark - table view
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    if (self.data) {
        return 2;
    }
    return 0;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    if (section == 0 && self.data) {
        return 1;
    }
    if (section == 1) {
        return self.commentArr.count;
    }
    return 0;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (indexPath.section == 0) {
        return self.webHeight;
    }
    if (indexPath.section == 1) {
        CGFloat h = 85;
        h += [self.commentArr[indexPath.row].content getSizeWithWidth:ScreenWidth - 20 Font:14.5].height;
        if (self.commentArr[indexPath.row].reply.content.length) {
            h += [self.commentArr[indexPath.row].reply.content getSizeWithWidth:ScreenWidth - 20 Font:14.5].height;
            if (self.commentArr[indexPath.row].replycount.integerValue > 1) {
                h += 20;
            }
            h += 60;
        }
        return h;
    }
    return 0;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    if (section == 0) {
        return 0.01;
    }
    return 40;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    if (section == 1) {
        return 30;
    }
    return self.isStatusHidden ? 0.0001 : 5;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    UITableViewCell *cell = [UITableViewCell new];
    if (indexPath.section == 0) {//web
        [self.msgCell setNewsCellData:self.data isLoadWeb:self.isLoadWeb];
        cell = self.msgCell;
    }
    if (indexPath.section == 1) {//评论
        BOOL state = YES;
        if (self.commentArr[indexPath.row].reply.content.length) {
            state = false;
        }
        WLKTNewsDetailCommentCell *cc = [tableView dequeueReusableCellWithIdentifier:@"WLKTNewsDetailCommentCell"];
        if (cc == nil) {
            cc = [[WLKTNewsDetailCommentCell alloc]initWithSingleState:state];
        }
        cc.delegate = self;
        [cc setCellData:self.commentArr[indexPath.row] indexPath:indexPath];
        cell = cc;
    }
    
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    if (section == 0) {
        return nil;
    }
    UIView *v = [[UIView alloc]initWithFrame:CGRectMake(0, 0, ScreenWidth, 40)];
    UIView *separatorView = [UIView new];
    separatorView.backgroundColor = UIColorHex(33c4da);
    [v addSubview:separatorView];
    [separatorView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(2, 20));
        make.centerY.mas_equalTo(v);
        make.left.mas_equalTo(v).offset(10);
    }];
    
    UILabel *title = [UILabel new];
    title.font = [UIFont systemFontOfSize:15];
    title.textColor = [UIColor blackColor];
    [v addSubview:title];
    [title mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(separatorView.mas_right).offset(10);
        make.centerY.mas_equalTo(v);
    }];
    if (section == 1) {
        title.text = [NSString stringWithFormat:@"全部评论(%@)", self.data.comment_num ? self.data.comment_num : @"0"];
    }
    
    return v;
    
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    if (section == 1 && self.data.comment_num.integerValue > 0) {
        UIView *v = [[UIView alloc]initWithFrame:CGRectMake(0, 0, ScreenWidth, 30)];
        v.backgroundColor = UIColorHex(ffffff);
        
        UIButton *allBtn = [UIButton new];
        [allBtn setTitle:@"加载更多" forState:UIControlStateNormal];
        [allBtn setTitleColor:UIColorHex(33c4da) forState:UIControlStateNormal];
        allBtn.layer.cornerRadius = 10;
        allBtn.titleLabel.font = [UIFont systemFontOfSize:11];
        allBtn.layer.masksToBounds = YES;
        allBtn.layer.borderColor = UIColorHex(33c4da).CGColor;
        allBtn.layer.borderWidth = 0.5;
        [allBtn addTarget:self action:@selector(commentMoreAct) forControlEvents:UIControlEventTouchUpInside];
        [v addSubview:allBtn];
        [allBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.size.mas_equalTo(CGSizeMake(70, 20));
            make.center.mas_equalTo(v);
        }];
        return v;
    }
    
    UIView *v = [[UIView alloc]initWithFrame:CGRectMake(0, 0, ScreenWidth, self.isStatusHidden ? 0.0001 : 5)];
    v.backgroundColor = separatorView_color;
    return v;
}

#pragma mark - action
- (void)shareAct{
    if (self.data.shareappurl) {
        [[NSUserDefaults standardUserDefaults] setBool:YES forKey:@"isSNSPush"];
        for (UIView *v in self.view.subviews) {
            if ([v isKindOfClass:[WLKTCustomShare class]]) {
                [v removeFromSuperview];
            }
        }
        WLKTCustomShare *v = [[WLKTCustomShare alloc]initWithTitle:self.data.title detail:nil urlImage:self.data.image url:self.data.shareappurl taget:self height:ScreenHeight - NavigationBarAndStatusHeight];
        [self.view addSubview:v];
    }
}

- (void)monitoringNetworkForVideo:(void(^)(void))handle{
    if (![YYReachability reachability].reachable) {
        return;
    }
    if ([YYReachability reachability].status == YYReachabilityStatusWWAN) {
        UIAlertController *ac = [UIAlertController alertControllerWithTitle:@"" message:@"当前为移动网络，播放将产生流量费用！" preferredStyle:UIAlertControllerStyleAlert];
        UIAlertAction *def = [UIAlertAction actionWithTitle:@"继续播放" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            !handle ?: handle();
        }];
        UIAlertAction *cancel = [UIAlertAction actionWithTitle:@"取消播放" style:UIAlertActionStyleCancel handler:nil];
        [ac addAction:def];
        [ac addAction:cancel];
        [self presentViewController:ac animated:YES completion:nil];
    }
    else{
        !handle ?: handle();
    }
}

-(void)timerun{
    [self fileSize];
}

-(void)fileSize{
    NSArray *pathArray = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *docDir = [pathArray objectAtIndex:0];
    NSString *filePath = docDir;
    NSFileManager *fileManager = [NSFileManager defaultManager];
    if([fileManager fileExistsAtPath:docDir isDirectory:nil]){
        NSArray *subpaths = [fileManager contentsOfDirectoryAtPath:filePath error:nil];
        for (NSString *subpath in subpaths) {
            
            NSString *fullSubpath = [filePath stringByAppendingPathComponent:subpath];
            if ([subpath hasSuffix:@".mp4"]) {
                long long fileSize =  [fileManager attributesOfItemAtPath:fullSubpath error:nil].fileSize;
                NSLog(@"fileSie ---- %lld",fileSize);
            }
        }
    }
}

- (void)commentMoreAct{
    [SVProgressHUD show];
    WLKTNewsDetailMoreCommentApi *api = [[WLKTNewsDetailMoreCommentApi alloc]initWithNewsId:self.nid page:self.page + 1];
    [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
        [SVProgressHUD dismiss];
        NSArray *arr = [NSArray modelArrayWithClass:[WLKTNewsDetailReplyList class] json:request.responseJSONObject[@"result"]];
        [self.commentArr addObjectsFromArray:arr];
        if (arr.count == 0) {
            [SVProgressHUD showInfoWithStatus:@"没有更多了"];
            self.page--;
        }
        dispatch_async(dispatch_get_main_queue(), ^{
            [self.tableView reloadSection:1 withRowAnimation:UITableViewRowAnimationAutomatic];
            self.page++;
        });
    } failure:^(__kindof YTKBaseRequest *request) {
        ShowApiError
    }];
}

- (void)goTopAction:(UIButton *)sender{
    [self.tableView scrollToTopAnimated:YES];
}

#pragma mark - msgCell delegate
- (void)didTapLikeIcon:(void (^)(BOOL, NSString *))completion{
    WLKTSchoolNewsDetailLikeApi *api = [[WLKTSchoolNewsDetailLikeApi alloc]initWithNewsId:self.nid];
    [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
        [SVProgressHUD showSuccessWithStatus:[NSString stringWithFormat:@"%@", request.responseJSONObject[@"message"]]];
        NSString *zan_num = [NSString stringWithFormat:@"%@", request.responseJSONObject[@"zan_num"]];
        completion(YES, zan_num);
    } failure:^(__kindof YTKBaseRequest *request) {
        ShowApiError
    }];
}

#pragma mark - webView delegate
- (void)didLoadHtmlStringWithHeight:(CGFloat)height{
    if (height > 0 && self.webHeight != height + 80) {
        self.webHeight = height + 80;
        [self.tableView reloadData];
    }
}

#pragma mark - bottom buttons delegate
- (void)schoolNewsDetailBottomButtonDidSelected:(UIButton *)button{
    if (button.tag == 0) {//举报
        WLKTSchoolNewsGoReportVC *vc = [[WLKTSchoolNewsGoReportVC alloc]initWithNewsId:self.nid];
        [self.navigationController pushViewController:vc animated:YES];
    }
    if (button.tag == 1) {//收藏
        if (!TheCurUser) {
            [SVProgressHUD showInfoWithStatus:@"请先登录"];
            return;
        }
        [SVProgressHUD show];
        if ([button.titleLabel.text isEqualToString:@"收 藏"]) {
            WLKTSchoolNewsCollectApi *api = [[WLKTSchoolNewsCollectApi alloc]initWithNewsId:self.nid];
            [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
                dispatch_async(dispatch_get_main_queue(), ^{
                    [SVProgressHUD dismiss];
                    [button setTitle:@"已收藏" forState:UIControlStateNormal];
                    [button setImage:[UIImage imageNamed:@"课程详情已收藏"] forState:UIControlStateNormal];
                });
            } failure:^(__kindof YTKBaseRequest *request) {
                ShowApiError
            }];
        }
        else{//取消收藏
            WLKTSchoolNewsCollectCancelApi *api = [[WLKTSchoolNewsCollectCancelApi alloc]initWithNewsId:self.nid];
            [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
                dispatch_async(dispatch_get_main_queue(), ^{
                    [SVProgressHUD dismiss];
                    [button setTitle:@"收 藏" forState:UIControlStateNormal];
                    [button setImage:[UIImage imageNamed:@"课程详情未收藏"] forState:UIControlStateNormal];
                });
            } failure:^(__kindof YTKBaseRequest *request) {
                ShowApiError
            }];
        }
    }
    if (button.tag == 2) {//我要评论
        WLKTSchoolNewsDetailCommentAlertView *commentAlert = [[WLKTSchoolNewsDetailCommentAlertView alloc]initWithFrame:CGRectMake(0, 0, ScreenWidth, ScreenHeight -IphoneXBottomInsetHeight) isPushViewController:false];
        commentAlert.delegate = self;
        [self.view addSubview:commentAlert];
    }
}

#pragma mark - comment cell delegate
- (void)didClickViewAllReplyButtonWithIndexPath:(NSIndexPath *)indexPath{//查看全部回复
    WLKTNewsCommentReplyVC *vc = [[WLKTNewsCommentReplyVC alloc]initWithCommentId:self.commentArr[indexPath.row].cid];
    [self.navigationController pushViewController:vc animated:YES];
}

- (void)didSelectedNewsDetailCommentButtonByType:(NewsDetailCommentType)type button:(UIButton *)button indexPath:(NSIndexPath *)indexPath{
    if (type == NewsDetailCommentLike) {//点赞
        [SVProgressHUD show];
        WLKTSchoolCommentLikeApi *api = [[WLKTSchoolCommentLikeApi alloc]initWithCommentId:self.commentArr[indexPath.row].cid];
        [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
            [SVProgressHUD dismiss];
            NSString *message = [NSString stringWithFormat:@"%@", request.responseJSONObject[@"message"]];
            if ([message containsString:@"已经赞"]) {
                [SVProgressHUD showInfoWithStatus:message];
            }
            else{
                [button setSelected:YES];
                NSString *zan_num = [NSString stringWithFormat:@"%@", request.responseJSONObject[@"zan_num"]];
                [button setTitle:[NSString stringWithFormat:@" 赞 %@", zan_num] forState:UIControlStateNormal];
            }
            
        } failure:^(__kindof YTKBaseRequest *request) {
            ShowApiError
        }];
    }
    if (type == NewsDetailCommentReport) {//举报
        WLKTSchoolCommentGoReportVC *vc = [[WLKTSchoolCommentGoReportVC alloc]initWithNewsComment:self.commentArr[indexPath.row] success:^{
//            [button setTitle:@" 已举报" forState:UIControlStateNormal];
        }];
        [self.navigationController pushViewController:vc animated:YES];
    }
    if (type == NewsDetailCommentReply) {//回复
        if ([button.titleLabel.text isEqualToString:@"回复"]) {
            WLKTNewsDetailCommentReply *r = [[WLKTNewsDetailCommentReply alloc]initWithFrame:CGRectMake(0, 0, ScreenWidth, ScreenHeight -IphoneXBottomInsetHeight) placeholder:[NSString stringWithFormat:@"回复@%@", self.commentArr[indexPath.row].username] index:indexPath.row isPushVC:false];
            r.delegate = self;
            [self.view addSubview:r];
        }
        else{
            WLKTNewsCommentReplyVC *vc = [[WLKTNewsCommentReplyVC alloc]initWithCommentId:self.commentArr[indexPath.row].cid];
            [self.navigationController pushViewController:vc animated:YES];
        }
    }
}

#pragma mark - comment alert delegate
- (void)didFinishWithComment:(NSString *)comment completion:(void (^)(BOOL))completion{
    WLKTSchoolGoCommentApi *api = [[WLKTSchoolGoCommentApi alloc]initWithNewsId:self.nid content:comment];
    [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
        completion(YES);
        self.isCommentReload = YES;
        [self loadData];
        [SVProgressHUD showSuccessWithStatus:@"评论成功!"];
    } failure:^(__kindof YTKBaseRequest *request) {
        ShowApiError
    }];
}

#pragma mark - NewsDetailCommentReplyDelegate
- (void)didFinishWithReply:(NSString *)reply index:(NSInteger)index completion:(void (^)(BOOL))completion{
    WLKTCommentReplyApi *api = [[WLKTCommentReplyApi alloc]initWithCommentId:self.commentArr[index].cid content:reply];
    [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
        [SVProgressHUD showInfoWithStatus:request.responseJSONObject[@"message"]];
        self.isCommentReload = YES;
        [self loadData];
        completion(YES);
    } failure:^(__kindof YTKBaseRequest *request) {
        
    }];
}

#pragma mark - AliyunVodPlayerViewDelegate
- (void)onBackViewClickWithAliyunVodPlayerView:(AliyunVodPlayerView *)playerView{
    if (self.playerView != nil) {
        [self.playerView stop];
        [self.playerView releasePlayer];
        [self.playerView removeFromSuperview];
        self.playerView = nil;
    }
    [self.navigationController popViewControllerAnimated:YES];
//    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)aliyunVodPlayerView:(AliyunVodPlayerView*)playerView onPause:(NSTimeInterval)currentPlayTime{
    
}
- (void)aliyunVodPlayerView:(AliyunVodPlayerView*)playerView onResume:(NSTimeInterval)currentPlayTime{
    
}
- (void)aliyunVodPlayerView:(AliyunVodPlayerView*)playerView onStop:(NSTimeInterval)currentPlayTime{
    
}
- (void)aliyunVodPlayerView:(AliyunVodPlayerView*)playerView onSeekDone:(NSTimeInterval)seekDoneTime{
    
}

- (void)aliyunVodPlayerView:(AliyunVodPlayerView *)playerView lockScreen:(BOOL)isLockScreen{
    self.isLock = isLockScreen;
}


- (void)aliyunVodPlayerView:(AliyunVodPlayerView*)playerView onVideoQualityChanged:(AliyunVodPlayerVideoQuality)quality{
    
}

- (void)aliyunVodPlayerView:(AliyunVodPlayerView *)playerView fullScreen:(BOOL)isFullScreen{
    NSLog(@"isfullScreen --%d",isFullScreen);
    self.isStatusHidden = isFullScreen;
    [self setNeedsStatusBarAppearanceUpdate];
    
    if (isFullScreen) {
        self.tableView.scrollEnabled = false;
        self.bottombtns.hidden = YES;
        [self.tableView mas_remakeConstraints:^(MASConstraintMaker *make) {
            make.size.centerX.centerY.mas_equalTo(self.view);
        }];
        
    }
    else{
        self.tableView.scrollEnabled = YES;
        self.bottombtns.hidden = false;
        [self.tableView mas_remakeConstraints:^(MASConstraintMaker *make) {
            make.top.left.width.mas_equalTo(self.view);
            make.bottom.mas_equalTo(self.bottombtns.mas_top);
        }];
        
    }
    [self.tableView reloadData];
    
}

- (void)onCircleStartWithVodPlayerView:(AliyunVodPlayerView *)playerView {
    
}


- (void)onFinishWithAliyunVodPlayerView:(AliyunVodPlayerView *)playerView {
    
}

#pragma mark - 锁屏功能
/**
 * 说明：播放器父类是UIView。
 屏幕锁屏方案需要用户根据实际情况，进行开发工作；
 如果viewcontroller在navigationcontroller中，需要添加子类重写navigationgController中的 以下方法，根据实际情况做判定 。
 */

- (BOOL)shouldAutorotate{
    return !self.isLock;
}

-(UIInterfaceOrientationMask)supportedInterfaceOrientations{
    if (self.isLock) {
        return UIInterfaceOrientationMaskPortrait;
    }else{
        return UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft |UIInterfaceOrientationMaskLandscapeRight;
        
    }
}

-(BOOL)prefersStatusBarHidden{
    if (IsIphoneX) {
        return false;
    }
    return YES;
}

- (NSString *)iphoneType {
    struct utsname platformInfo;
    uname(&platformInfo);
    NSString *platform = [NSString stringWithCString: platformInfo.machine encoding:NSASCIIStringEncoding];
    return platform;
}

//适配iphone x 界面问题，没有在 viewSafeAreaInsetsDidChange 这里做处理 ，主要 旋转监听在 它之后获取。
-(void)viewDidLayoutSubviews{
    [super viewDidLayoutSubviews];
    NSString *platform =  [self iphoneType];
    
    //iphone x
    if (![platform isEqualToString:@"iPhone10,3"] && ![platform isEqualToString:@"iPhone10,6"]) {
        return;
    }
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= 110000
    UIDevice *device = [UIDevice currentDevice] ;
    switch (device.orientation) {//device.orientation
        case UIDeviceOrientationFaceUp:
        case UIDeviceOrientationFaceDown:
        case UIDeviceOrientationUnknown:
        case UIDeviceOrientationPortraitUpsideDown:{
            if (self.isStatusHidden) {
                CGRect frame = self.playerView.frame;
                frame.origin.x = VIEWSAFEAREAINSETS(self.view).left;
                frame.origin.y = VIEWSAFEAREAINSETS(self.view).top;
                frame.size.width = ScreenWidth - VIEWSAFEAREAINSETS(self.view).left *2;
                frame.size.height = ScreenHeight - VIEWSAFEAREAINSETS(self.view).bottom - VIEWSAFEAREAINSETS(self.view).top;
                self.playerView.frame = frame;
            }else{
                CGRect frame = self.playerView.frame;
                frame.origin.y = VIEWSAFEAREAINSETS(self.view).top;
                //竖屏全屏时 isStatusHidden 来自是否 旋转回调。
                if (self.playerView.fixedPortrait && self.isStatusHidden) {
                    frame.size.height = ScreenHeight - VIEWSAFEAREAINSETS(self.view).top - VIEWSAFEAREAINSETS(self.view).bottom;
                }
                self.playerView.frame = frame;
            }
        }
            break;
        case UIDeviceOrientationLandscapeLeft:
        case UIDeviceOrientationLandscapeRight:
        {
            //
            CGRect frame = self.playerView.frame;
            frame.origin.x = VIEWSAFEAREAINSETS(self.view).left;
            frame.origin.y = VIEWSAFEAREAINSETS(self.view).top;
            frame.size.width = ScreenWidth - VIEWSAFEAREAINSETS(self.view).left*2;
            frame.size.height = ScreenHeight - VIEWSAFEAREAINSETS(self.view).bottom;
            self.playerView.frame = frame;
        }
            
            break;
        case UIDeviceOrientationPortrait:
        {
            //
            CGRect frame = self.playerView.frame;
            frame.origin.y = VIEWSAFEAREAINSETS(self.view).top;
            //竖屏全屏时 isStatusHidden 来自是否 旋转回调。
            if (self.playerView.fixedPortrait && self.isStatusHidden) {
                frame.size.height = ScreenHeight - VIEWSAFEAREAINSETS(self.view).top - VIEWSAFEAREAINSETS(self.view).bottom;
            }
            self.playerView.frame = frame;
            
        }
            break;
        default:
            
            break;
    }
    
#else
#endif
    NSLog(@"top----%f",self.playerView.frame.origin.y);
    
}

#pragma mark - get
- (UITableView *)tableView{
    if (!_tableView) {
        _tableView = [[UITableView alloc]initWithFrame:CGRectNull style:UITableViewStyleGrouped];
        _tableView.dataSource = self;
        _tableView.delegate = self;
        _tableView.backgroundColor = [UIColor whiteColor];
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    }
    return _tableView;
}
- (WLKTSchoolNewsDetailMsgCell *)msgCell{
    if (!_msgCell) {
        _msgCell = [[WLKTSchoolNewsDetailMsgCell alloc]init];
        _msgCell.delegate = self;
        _msgCell.webView.delegate = self;
        _msgCell.webView.scrollView.delegate = self;
    }
    return _msgCell;
}
- (WLKTSchoolNewsDetailBottomBtns *)bottombtns{
    if (!_bottombtns) {
        _bottombtns = [[WLKTSchoolNewsDetailBottomBtns alloc]initWithFrame:CGRectNull];
        _bottombtns.delegate = self;
    }
    return _bottombtns;
}
- (NSMutableArray<WLKTNewsDetailReplyList *> *)commentArr{
    if (!_commentArr) {
        _commentArr = [NSMutableArray arrayWithCapacity:10];
    }
    return _commentArr;
}

@end


