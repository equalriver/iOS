//
//  WLKTHomepageVC.m
//  wlkt
//
//  Created by nanbojiaoyu on 2018/1/23.
//  Copyright © 2018年 neimbo. All rights reserved.
//

#import "WLKTHomepageVC.h"
#import "WLKTHomepageNavigationButton.h"
#import "WLKTHomepageRecommendVC.h"
#import "WLKTHomepageCourseVC.h"
#import "WLKTHomepageActivityVC.h"
#import "WLKTQRScanVC.h"
#import "WLKTHomepagePopoverVC.h"
#import "WLKTTeamworkVC.h"
#import "WLKTJoinTableViewController.h"
#import <AVFoundation/AVFoundation.h>

@interface WLKTHomepageVC ()<HomepagePopoverDelegate, UIPopoverPresentationControllerDelegate>
@property (strong, nonatomic) WLKTHomepageNavigationButton *tuijian;
@property (strong, nonatomic) WLKTHomepageNavigationButton *courseBtn;
@property (strong, nonatomic) WLKTHomepageNavigationButton *activityBtn;
@property (strong, nonatomic) WLKTHomepageNavigationButton *schoolBtn;
@property (strong, nonatomic) UIButton *goTopBtn;

@end

@implementation WLKTHomepageVC

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(goTopBtnWillShow) name:@"homepageGoTopShowNoti" object:nil];
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(goTopBtnWillHidden) name:@"homepageGoTopDismissNoti" object:nil];
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(selectedActivityNotiAct) name:@"selectedActivityNoti" object:nil];
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(HP_GoActivityNoti) name:kHP_GoActivityNoti object:nil];
    [self setBarButtonItem];
    [self makeConstraints];
}

- (void)setBarButtonItem{
    UIBarButtonItem *tuijian = [[UIBarButtonItem alloc]initWithCustomView:self.tuijian];
    UIBarButtonItem *course = [[UIBarButtonItem alloc]initWithCustomView:self.courseBtn];
    UIBarButtonItem *activity = [[UIBarButtonItem alloc]initWithCustomView:self.activityBtn];
    UIBarButtonItem *fix_1 = [[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
    fix_1.width = 30 *ScreenRatio_6;
    UIBarButtonItem *fix_2 = [[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil]; 
    fix_2.width = 30 *ScreenRatio_6;
    self.navigationItem.leftBarButtonItems = @[tuijian, fix_1, course, fix_2, activity];
    
    UIBarButtonItem *search = [[UIBarButtonItem alloc]initWithImage:[UIImage imageNamed:@"HP查找"] style:UIBarButtonItemStylePlain target:self action:@selector(searchBarButtonAct)];
    UIBarButtonItem *more = [[UIBarButtonItem alloc]initWithImage:[UIImage imageNamed:@"更多-b"] style:UIBarButtonItemStylePlain target:self action:@selector(moreBarButtonAct:)];
    self.navigationItem.rightBarButtonItems = @[more, search];
}

- (void)makeConstraints{
    [self.view addSubview:self.goTopBtn];
    [self.goTopBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.bottom.mas_equalTo(self.view.mas_bottom).offset(-60);
        make.right.mas_equalTo(self.view).offset(-15);
    }];
}

- (void)dealloc{
    [[NSNotificationCenter defaultCenter]removeObserver:self];
}
//- (void)viewWillAppear:(BOOL)animated{
//    [super viewWillAppear:animated];
//    [self.navigationController setNavigationBarHidden:YES animated:false];
//}
//
//- (void)viewWillDisappear:(BOOL)animated{
//    [super viewWillDisappear:animated];
//    [self.navigationController setNavigationBarHidden:false animated:false];
//}

#pragma mark - noti
- (void)goTopBtnWillShow{
    self.goTopBtn.hidden = false;
}

- (void)goTopBtnWillHidden{
    self.goTopBtn.hidden = YES;
}

- (void)selectedActivityNotiAct{
    self.selectIndex = 2;
}

#pragma mark - action
- (void)homepageNaviButtonAct:(UIButton *)sender{
    self.selectIndex = (int)sender.tag;
    
    NSArray *arr = @[self.tuijian, self.courseBtn, self.activityBtn];
    for (WLKTHomepageNavigationButton *btn in arr) {
        if (btn.tag == sender.tag) {
            btn.selectedView.hidden = false;
        }
        else{
            btn.selectedView.hidden = YES;
        }
    }
}

- (void)HP_GoActivityNoti{
    self.goTopBtn.hidden = YES;
    self.selectIndex = 2;//活动
}

- (void)searchBarButtonAct{
    UIView *keyWindow = [UIApplication sharedApplication].keyWindow;
    for (UIView *v in keyWindow.subviews) {
        if ([v isKindOfClass:[WLKTClassifySearchResult class]]) {
            [[NSNotificationCenter defaultCenter]postNotificationName:kClassifyFliterViewRemovedByNaviBarBtnNoti object:nil];
            [v removeFromSuperview];
        }
    }
    if ([self.HomepageVCDelegate respondsToSelector:@selector(didClickSearchButtonItem)]) {
        [self.HomepageVCDelegate didClickSearchButtonItem];
    }
}

- (void)moreBarButtonAct:(id)sender{
    UIView *keyWindow = [UIApplication sharedApplication].keyWindow;
    for (UIView *v in keyWindow.subviews) {
        if ([v isKindOfClass:[WLKTClassifySearchResult class]]) {
            [[NSNotificationCenter defaultCenter]postNotificationName:kClassifyFliterViewRemovedByNaviBarBtnNoti object:nil];
            [v removeFromSuperview];
        }
    }
    
    WLKTHomepagePopoverVC *vc = [[WLKTHomepagePopoverVC alloc]init];
    vc.delegate = self;
    vc.preferredContentSize = CGSizeMake(110, 120);
    vc.modalPresentationStyle = UIModalPresentationPopover;
    UIPopoverPresentationController *pop = [vc popoverPresentationController];
    pop.delegate = self;
    pop.backgroundColor = [UIColor whiteColor];
    pop.permittedArrowDirections = UIPopoverArrowDirectionUp;
    if ([sender isKindOfClass:[UIButton class]]) {
        pop.sourceView = sender;
        pop.sourceRect = ((UIButton *)sender).bounds;
    }
    else{
        pop.barButtonItem = sender;
    }
    [self presentViewController:vc animated:NO completion:nil];
}

- (void)goTopAction:(UIButton *)sender{
    if ([self.currentViewController isKindOfClass:[UITableViewController class]]) {
        [((UITableViewController *)self.currentViewController).tableView scrollToTop];
    }
}

#pragma mark - popover delegate
- (void)popoverDidSelected:(NSInteger)index{
    if (index == 0) {//扫码
        AVAuthorizationStatus status = [AVCaptureDevice authorizationStatusForMediaType:AVMediaTypeVideo];
        if(status != AVAuthorizationStatusAuthorized) {
            
            UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"提示" message:@"请打开相机授权以使用扫码功能" preferredStyle:UIAlertControllerStyleAlert];
            [alert addAction:[UIAlertAction actionWithTitle:@"是" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
                //跳转到权限页面
                NSURL *url = [NSURL URLWithString:UIApplicationOpenSettingsURLString];
                if( [[UIApplication sharedApplication]canOpenURL:url] ) {
                    [[UIApplication sharedApplication] openURL:url];
                }
                
            }]];
            [alert addAction:[UIAlertAction actionWithTitle:@"否" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
//                [self.navigationController popViewControllerAnimated:YES];
            }]];
            [self.presentedViewController dismissViewControllerAnimated:YES completion:^{
                [self presentViewController:alert animated:YES completion:nil];
            }];
            
        }
        else{
            WLKTQRScanVC *vc = [[WLKTQRScanVC alloc]init];
            vc.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:vc animated:YES];
        }
        
    }
    if (index == 1) {//合作
        WLKTTeamworkVC *vc = [[WLKTTeamworkVC alloc]init];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }
    if (index == 2) {//入驻
        WLKTJoinTableViewController *vc = [[WLKTJoinTableViewController alloc]init];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }
}

#pragma mark - popoverPresentationController delegate
-(UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController *)controller{
    return UIModalPresentationNone; 
}

#pragma mark - wmpageController
- (NSInteger)numbersOfChildControllersInPageController:(WMPageController *)pageController{
    return 3;
}

- (UIViewController *)pageController:(WMPageController *)pageController viewControllerAtIndex:(NSInteger)index{
    if (index == 0) {
        WLKTHomepageRecommendVC *vc = [[WLKTHomepageRecommendVC alloc]initWithStyle:UITableViewStyleGrouped];
        return vc;
    }
    if (index == 1) {
        WLKTHomepageCourseVC *vc = [[WLKTHomepageCourseVC alloc]init];
        return vc;
    }
    WLKTHomepageActivityVC *vc = [[WLKTHomepageActivityVC alloc]init];
    return vc;
}

- (void)pageController:(WMPageController *)pageController didEnterViewController:(__kindof UIViewController *)viewController withInfo:(NSDictionary *)info{
    [SVProgressHUD dismiss];
    self.goTopBtn.hidden = YES;
    NSArray *arr = @[self.tuijian, self.courseBtn, self.activityBtn];
    for (WLKTHomepageNavigationButton *btn in arr) {
        if (btn.tag == ((NSNumber *)(info[@"index"])).integerValue) {
            btn.selectedView.hidden = false;
        }
        else{
            btn.selectedView.hidden = YES;
        }
    }
    
    UIView *keyWindow = [UIApplication sharedApplication].keyWindow;
    for (UIView *v in keyWindow.subviews) {
        if ([v isKindOfClass:[WLKTClassifySearchResult class]]) {
            [[NSNotificationCenter defaultCenter]postNotificationName:kClassifyFliterViewRemovedByNaviBarBtnNoti object:nil];
            [v removeFromSuperview];
        }
    }
}

- (CGRect)pageController:(WMPageController *)pageController preferredFrameForMenuView:(WMMenuView *)menuView {
    return CGRectZero;
}

- (CGRect)pageController:(WMPageController *)pageController preferredFrameForContentView:(WMScrollView *)contentView{
    return CGRectMake(0, 0, kScreenWidth, kScreenHeight - NavigationBarAndStatusHeight - 50);
}

#pragma mark - get
- (WLKTHomepageNavigationButton *)tuijian{
    if (!_tuijian) {
        _tuijian = [[WLKTHomepageNavigationButton alloc]initWithFrame:CGRectMake(0, 0, 70 *ScreenRatio_6, 30) title:@"推荐"];
        _tuijian.tag = 0;
        [_tuijian addTarget:self action:@selector(homepageNaviButtonAct:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _tuijian;
}
- (WLKTHomepageNavigationButton *)courseBtn{
    if (!_courseBtn) {
        _courseBtn = [[WLKTHomepageNavigationButton alloc]initWithFrame:CGRectMake(0, 0, 70 *ScreenRatio_6, 30) title:@"课程"];
        _courseBtn.tag = 1;
        [_courseBtn addTarget:self action:@selector(homepageNaviButtonAct:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _courseBtn;
}
- (WLKTHomepageNavigationButton *)activityBtn{
    if (!_activityBtn) {
        _activityBtn = [[WLKTHomepageNavigationButton alloc]initWithFrame:CGRectMake(0, 0, 70 *ScreenRatio_6, 30) title:@"活动"];
        _activityBtn.tag = 2;
        [_activityBtn addTarget:self action:@selector(homepageNaviButtonAct:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _activityBtn;
}
- (UIButton *)goTopBtn{
    if (!_goTopBtn) {
        _goTopBtn = [UIButton new];
        _goTopBtn.hidden = YES;
        [_goTopBtn setImage:[UIImage imageNamed:@"顶部"] forState:UIControlStateNormal];
        [_goTopBtn addTarget:self action:@selector(goTopAction:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _goTopBtn;
}
@end
