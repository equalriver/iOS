//
//  WLKTHomepageViewController.m
//  wlkt
//
//  Created by slovelys on 17/3/19.
//  Copyright © 2017年 neimbo. All rights reserved.
//

#import "WLKTHomepageViewController.h"
#import "WLKTLoginApi.h"
#import "WLKTBannerData.h"
#import "WLKTHeaderButtonsView.h"
#import "WLKTCourseCell.h"
#import "WLKTCourse.h"
#import "WLKTCourseTableData.h"
#import "WLKTSectionHeaderView.h"
#import "WLKTCourseClassificationViewController.h"
#import "WLKTCoursePageController.h"
#import "WLKTTableviewRefresh.h"
#import "UIViewController+State.h"
#import "WLKTCourseLoadNextApi.h"
#import "WLKActivityViewController.h"
#import "WLKTActivityCell.h"
#import "WLKTExchangeButton.h"
#import "WLKTActivityDetailVC.h"
#import "WLKTActivity.h"
#import <BlocksKit.h>
#import "WLKTHomepageCouponView.h"
#import "WLKTGetCouponVC.h"
#import "WLKTCouponSaleVC.h"
#import "WLKTCourseDetailVC.h"

static CGFloat const kButtonsViewHeight = 90;
static CGFloat const kActivityBannerViewHeight = 100;
static CGFloat const kCouponViewHeight = 141;

//static NSString * const hotlist = @"热门课程";
//static NSString * const language = @"出国留学";
//static NSString * const arts = @"艺术培训";
//static NSString * const school = @"中小学";
static NSString * const like = @"猜你喜欢";

@interface WLKTHomepageViewController () <WLKTCourseCellDelegate, WLKTBannerDataDelegate, SDCycleScrollViewDelegate>

@property (strong, nonatomic) WLKTUser *user;
@property (strong, nonatomic) WLKTHeaderButtonsView *headerButtonsView;
@property (strong, nonatomic) WLKTBannerData *bannerData;
@property (strong, nonatomic) SDCycleScrollView *bannerView;
@property (strong, nonatomic) SDCycleScrollView *activityBanner;
@property (strong, nonatomic) WLKTHomepageCouponView *couponView;
@property (strong, nonatomic) UIButton *goTopBtn;

@property (strong, nonatomic) NSMutableArray *dataSource;
@property (strong, nonatomic) NSMutableArray *headerTitlesArray;
@property (strong, nonatomic) NSMutableArray *headerButtonsTitle;
@property (strong, nonatomic) NSMutableArray *moreCourseUrls;
@property (strong, nonatomic) NSMutableArray *headerButtonTitle;
@property (strong, nonatomic) NSMutableArray *headerButtonCourseUrls;
@property (assign, nonatomic) BOOL hasHotSearchs;

@property (assign, nonatomic) NSInteger page;
@property (copy, nonatomic) NSString *ids;

@end

@implementation WLKTHomepageViewController

- (instancetype)initWithUser:(WLKTUser *)user {
    if (self = [super init]) {
        _user = user;
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.hidesBottomBarWhenPushed = YES;
    self.page = 1;
//    [self setupTableView];
    [self.bannerData reloadData];
    [self initializeData];
    self.tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, 0.1)];
    self.tableView.tableFooterView.backgroundColor = UIColorHex(f5f5f5);
    self.tableView.backgroundColor = [UIColor whiteColor];
    
    UIView *v = [UIApplication sharedApplication].keyWindow;
    [v addSubview:self.goTopBtn];
    [self.goTopBtn mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.bottom.mas_equalTo(v).offset(-70);
        make.right.mas_equalTo(v).offset(-15);
    }];
}

- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    [self setHidesBottomBarWhenPushed:NO];
}

- (void)setupTableView {
    self.tableView.tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, kScreenHeight / 4 + kButtonsViewHeight + kActivityBannerViewHeight + kCouponViewHeight * ScreenRatio_6)];
    self.tableView.tableHeaderView.backgroundColor = [UIColor whiteColor];
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
//    self.tableView.state = WLKTViewStateLoading;
    
    [self.tableView registerNib:[UINib nibWithNibName:NSStringFromClass([WLKTCourseCell class]) bundle:nil] forCellReuseIdentifier:@"WLKTCourseCell"];
    @weakify(self)
    [WLKTTableviewRefresh tableviewRefreshHeaderWithTaget:self.tableView request:^() {
        @strongify(self)
        [self initializeData];
    }];
    [WLKTTableviewRefresh tableviewRefreshFooterWithTaget:self.tableView block:^() {
        @strongify(self)
        [self loadNextWiht:self.page ids:self.ids];
    }];
    
}

- (void)initializeData {
    self.tableView.state = WLKTViewStateLoading;
    WS(weakSelf);
    [WLKTCourseTableData initializeDataWithCompletion:^(WLKTHomepage * _Nonnull homepage, WLKTViewState state) {
        dispatch_async(dispatch_get_main_queue(), ^{
            self.tableView.state = WLKTViewStateNormal;
            if (state == WLKTViewStateError) {
                self.tableView.state = WLKTViewStateError;
                [self.tableView reloadData];
                self.tableView.emptyButtonClickBlock = ^{
                    [weakSelf initializeData];
                };
                return ;
            }
            
            self.page = 1;
            [self.moreCourseUrls removeAllObjects];
            [self.headerButtonCourseUrls removeAllObjects];
            [self.headerButtonTitle removeAllObjects];
            [self.dataSource removeAllObjects];
            [self.headerTitlesArray removeAllObjects];
            
            self.ids = homepage.ids;
            
            [self.headerTitlesArray addObject:@""];
            [homepage.url enumerateObjectsUsingBlock:^(NSDictionary * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
                [self.moreCourseUrls addObject:obj[@"urlmore"]];
                [self.headerTitlesArray addObject:obj[@"title"]];
            }];
            [homepage.topinfo enumerateObjectsUsingBlock:^(WLKTHeaderButtons * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
                [self.headerButtonCourseUrls addObject:obj.url];
                [self.headerButtonTitle addObject:obj.title];
            }];
            if (!self.hasHotSearchs) {
                if (self.hotSearchCompletion) {
                    self.hotSearchCompletion(homepage.hotsearch);
                }
                self.hasHotSearchs = YES;
            }
            if (homepage.actlist && homepage.actlist.count > 0) {
                [self.dataSource addObject:homepage.actlist];
//                [self.headerTitlesArray addObject:@""];
            }
            if (homepage.hotlist && homepage.hotlist.count > 0) {
                [self.dataSource addObject:homepage.hotlist];
//                [self.headerTitlesArray addObject:hotlist];
            }
            if (homepage.arts && homepage.arts.count > 0) {
                [self.dataSource addObject:homepage.arts];
                //                [self.headerTitlesArray addObject:arts];
            }
            if (homepage.language && homepage.language.count > 0) {
                [self.dataSource addObject:homepage.language];
                //                [self.headerTitlesArray addObject:language];
            }
            if (homepage.school && homepage.school.count > 0) {
                [self.dataSource addObject:homepage.school];
                //                [self.headerTitlesArray addObject:school];
            }
            if (homepage.like && homepage.like.count > 0) {
                [self.dataSource addObject:homepage.like];
                [self.headerTitlesArray addObject:like];
            }
            if (!self.dataSource.count) {
                self.tableView.state = WLKTViewStateEmpty;
                self.tableView.titleForStateEmpty = @"暂时没有新课程哦~";
            }
            static dispatch_once_t onceToken;
            dispatch_once(&onceToken, ^{
                [self setupTableView];
            });
            
            [self.tableView.tableHeaderView addSubview:self.bannerView];
            [self.tableView.tableHeaderView addSubview:self.headerButtonsView];
            [self.tableView.tableHeaderView addSubview:self.activityBanner];
            [self.tableView.tableHeaderView addSubview:self.couponView];
            [self.tableView reloadData];
            [self.tableView.mj_header endRefreshing];
            [self.tableView.mj_footer resetNoMoreData];
        });
    }];
}

- (void)loadNextWiht:(NSInteger)page ids:(NSString *)ids {
    WLKTCourseLoadNextApi *api = [[WLKTCourseLoadNextApi alloc] initWithPage:self.page + 1 ids:self.ids];
    [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
        self.page += 1;
        WLKTHomepage *homepage = [WLKTHomepage modelWithDictionary:request.responseJSONObject[@"result"]];
        if (homepage.like && homepage.like.count > 0) {
            NSMutableArray *ary = [self.dataSource.lastObject mutableCopy];
            [ary addObjectsFromArray:homepage.like];
            [self.dataSource replaceObjectAtIndex:self.dataSource.count - 1 withObject:ary];
        }
        if (homepage.like.count < 10) {
            [self.tableView.mj_footer endRefreshingWithNoMoreData];
        } else {
          [self.tableView.mj_footer endRefreshing];
        }
        [self.tableView reloadData];
    } failure:^(__kindof YTKBaseRequest *request) {
        [self.tableView.mj_footer endRefreshing];
    }];
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return self.dataSource.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
//    if (section == 0) {
//        return 3;
//    }
    if (section == 0 && [self.headerTitlesArray[section] isEqualToString:@""]) {
        return [self.dataSource[section] count];
    }
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0 && [self.headerTitlesArray[indexPath.section] isEqualToString:@""]) {
        WLKActivityViewController *vc = [[WLKActivityViewController alloc] initWithActivityListPosition:ActivityListPositionHomepage activityId:nil info:nil];
        WLKTActivityCell *cell = [vc.tableView dequeueReusableCellWithIdentifier:@"activityCell"];
        cell.needLine = YES;
        cell.model = self.dataSource[indexPath.section][indexPath.row];
        return cell;
    }
    WLKTCourseCell *cell = [tableView dequeueReusableCellWithIdentifier:@"WLKTCourseCell" forIndexPath:indexPath];
    cell.delegate = self;
    cell.model = self.dataSource[indexPath.section];
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0 && [self.headerTitlesArray[indexPath.section] isEqualToString:@""]) {
        return kActivityCellWithContentLabelHeight;
    }
    CGFloat height = kHomepageCellHeight;
    NSArray *ary = self.dataSource[indexPath.section];
    return  10 + (ary.count + 1) / 2 * (height);
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)sectionIndex {
    BOOL isNeedMoreButton;
    if (sectionIndex == 0 && [self.headerTitlesArray[sectionIndex] isEqualToString:@""]) {
        UIView *view = [UIView new];
        view.backgroundColor = UIColorHex(fafafa);
        UIImageView *imgView = [[UIImageView alloc] init];
        imgView.frame = CGRectMake(10, 40 * ScreenRatio_6 / 4, 144 / 36 * 40 * ScreenRatio_6 / 2, 40 * ScreenRatio_6 / 2);
        imgView.image = [UIImage imageNamed:@"activity_sectionTitle"];
        [view addSubview:imgView];
        
        WLKTExchangeButton *button = [[WLKTExchangeButton alloc] init];
        button.frame = CGRectMake(kScreenWidth - 68, 0, 60, 40 * ScreenRatio_6);
        button.titleLabel.font = [UIFont systemFontOfSize:15];
        [button setImage:[UIImage imageNamed:@"activity_arrow"] forState:UIControlStateNormal];
        [button setTitle:@"更多  " forState:UIControlStateNormal];
        [button setTitleColor:UIColorHex(ff5e06) forState:UIControlStateNormal];
        [button addBlockForControlEvents:UIControlEventTouchUpInside block:^(id  _Nonnull sender) {
            self.tabBarController.selectedIndex = 0;
            [[NSNotificationCenter defaultCenter]postNotificationName:kHP_GoActivityNoti object:nil];
        }];
        
        [view addSubview:button];
//        [button mas_makeConstraints:^(MASConstraintMaker *make) {
//            make.right.mas_equalTo(view.right).offset(-CGFloatFromPixel(30));
//            make.centerY.mas_equalTo(view);
//        }];
        
        return view;
    }
    if ([self.headerTitlesArray[sectionIndex] isEqualToString:@"猜你喜欢"]) {
        isNeedMoreButton = NO;
    } else {
        isNeedMoreButton = YES;
    }
    WLKTSectionHeaderView *view = [[WLKTSectionHeaderView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, 40 * ScreenRatio_6) title:self.headerTitlesArray[sectionIndex] isNeedMoreButton:isNeedMoreButton];
    @weakify(self)
    view.tap = ^(NSString *title) {
        @strongify(self)
        WLKTCoursePageController *vc = [[WLKTCoursePageController alloc] initWithCourseClassifition:title];
        [vc setHidesBottomBarWhenPushed:YES];
        vc.navigationItem.title = self.headerTitlesArray[sectionIndex];
        [self.navigationController pushViewController:vc animated:YES];
    };
    return view;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)sectionIndex {
    return 40 * ScreenRatio_6;
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    return 0.01;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0 && [self.headerTitlesArray.firstObject isEqualToString:@""]) {
        WLKTActivity *act = self.dataSource.firstObject[indexPath.row];
        WLKTActivityDetailVC *vc = [[WLKTActivityDetailVC alloc] initWithActivityId:act.aid];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView{
    CGFloat offsetY = scrollView.contentOffset.y;
    if (offsetY > ScreenHeight * 2) {
        self.goTopBtn.hidden = false;
    }
    else{
        self.goTopBtn.hidden = YES;
    }
}

#pragma mark - WLKTCourseCellDelegate

- (void)courseCell:(WLKTCourseCell *)cell didSelectItem:(WLKTCourse *)course atIndexPath:(NSIndexPath *)indexPath {
//    if ([self.homepageDelegate respondsToSelector:@selector(homepageViewController:didSelectCourseItem:)]) {
//        [self.homepageDelegate homepageViewController:self didSelectCourseItem:course];
//    }
    WLKTCourseDetailVC *vc = [[WLKTCourseDetailVC alloc] initWithCourseId:course.uid];
    [vc setHidesBottomBarWhenPushed:YES];
    [self.navigationController pushViewController:vc animated:YES];
}

#pragma mark - WLKTBannerDataDelegate

- (void)bannerView:(SDCycleScrollView *)bannerView didSelectCourseItem:(WLKTCourse *)course {
    if ([self.homepageDelegate respondsToSelector:@selector(homepageViewController:didSelectCourseItem:)]) {
        [self.homepageDelegate homepageViewController:self didSelectCourseItem:course];
    }
}

- (void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index {
    if (cycleScrollView == _activityBanner) {
        self.tabBarController.selectedIndex = 0;
        [[NSNotificationCenter defaultCenter]postNotificationName:kHP_GoActivityNoti object:nil];
    }
}

#pragma mark - Action

- (void)didTapButtonOfHeaderView:(UIButton *)button {
    WLKTCoursePageController *vc = [[WLKTCoursePageController alloc] initWithCourseClassifition:@[@"出国留学", @"艺术培训", @"学前教育", @"中小学"][button.tag]];
    [vc setHidesBottomBarWhenPushed:YES];
    vc.navigationItem.title = button.titleLabel.text;
    [self.navigationController pushViewController:vc animated:YES];
}

- (void)couponCenterBtnAct{
    [self setHidesBottomBarWhenPushed:YES];
    WLKTGetCouponVC *vc = [[WLKTGetCouponVC alloc]init];
    [self.navigationController pushViewController:vc animated:YES];
}

- (void)couponSaleBtnAct{
    [self setHidesBottomBarWhenPushed:YES];
    WLKTCouponSaleVC *vc = [[WLKTCouponSaleVC alloc]init];
    [self.navigationController pushViewController:vc animated:YES];
}

- (void)goTopAction:(UIButton *)sender{
    [self.tableView scrollToTopAnimated:YES];
}

#pragma mark - Setters & Getters
- (NSMutableArray *)dataSource {
    if (!_dataSource) {
        _dataSource = [NSMutableArray array];
    }
    return _dataSource;
}

- (NSMutableArray *)headerTitlesArray {
    if (!_headerTitlesArray) {
        _headerTitlesArray = [NSMutableArray array];
    }
    return  _headerTitlesArray;
}

- (NSMutableArray *)headerButtonsTitle {
    if (!_headerButtonsTitle) {
        _headerButtonsTitle = [NSMutableArray array];
    }
    return _headerButtonsTitle;
}

- (NSMutableArray *)moreCourseUrls {
    if (!_moreCourseUrls) {
        _moreCourseUrls = [NSMutableArray array];
    }
    return _moreCourseUrls;
}

- (NSMutableArray *)headerButtonCourseUrls {
    if (!_headerButtonCourseUrls) {
        _headerButtonCourseUrls = [NSMutableArray array];
    }
    return _headerButtonCourseUrls;
}

- (NSMutableArray *)headerButtonTitle {
    if (!_headerButtonTitle) {
        _headerButtonTitle = [NSMutableArray array];
    }
    return _headerButtonTitle;
}

- (WLKTBannerData *)bannerData {
    if (!_bannerData) {
        _bannerData = [[WLKTBannerData alloc] initWithBannerView:self.bannerView position:WLKTBannerPositionHomepage];
        _bannerData.delegate = self;
    }
    return _bannerData;
}

- (SDCycleScrollView *)bannerView {
    if (!_bannerView) {
        _bannerView = [SDCycleScrollView cycleScrollViewWithFrame:CGRectMake(0, 0, kScreenWidth, kScreenHeight / 4) delegate:nil placeholderImage:nil];
    }
    return _bannerView;
}

- (SDCycleScrollView *)activityBanner {
    if (!_activityBanner) {
        _activityBanner = [SDCycleScrollView cycleScrollViewWithFrame:CGRectMake(0, kScreenHeight / 4 + kButtonsViewHeight, kScreenWidth, kActivityBannerViewHeight) imageNamesGroup:@[@"activity_banner"]];
        _activityBanner.backgroundColor = [UIColor whiteColor];
        _activityBanner.bannerImageViewContentMode = UIViewContentModeScaleAspectFit;
        _activityBanner.delegate = self;
    }
    return _activityBanner;
}
- (WLKTHomepageCouponView *)couponView{
    if (!_couponView) {
        _couponView = [[WLKTHomepageCouponView alloc]initWithFrame:CGRectMake(0, kScreenHeight / 4 + kButtonsViewHeight + kActivityBannerViewHeight, ScreenWidth, kCouponViewHeight * ScreenRatio_6)];
        _couponView.backgroundColor = [UIColor whiteColor];
        UITapGestureRecognizer *tapCenter = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(couponCenterBtnAct)];
        [_couponView.couponCenterBtn addGestureRecognizer:tapCenter];
        UITapGestureRecognizer *tapSale = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(couponSaleBtnAct)];
        [_couponView.couponSaleBtn addGestureRecognizer:tapSale];
    }
    return _couponView;
}
- (WLKTHeaderButtonsView *)headerButtonsView {
    if (!_headerButtonsView) {
        _headerButtonsView = [[WLKTHeaderButtonsView alloc] initWithFrame:CGRectMake(0, kScreenHeight / 4, kScreenWidth, kButtonsViewHeight) images:@[[UIImage imageNamed:@"button_studyabord"], [UIImage imageNamed:@"button_art"], [UIImage imageNamed:@"button_kindergarden"], [UIImage imageNamed:@"button_school"]] titles:self.headerButtonTitle];
        [_headerButtonsView.buttons enumerateObjectsUsingBlock:^(UIButton * _Nonnull button, NSUInteger idx, BOOL * _Nonnull stop) {
            button.tag = idx;
            [button addTarget:self action:@selector(didTapButtonOfHeaderView:) forControlEvents:UIControlEventTouchUpInside];
        }];
    }
    return _headerButtonsView;
}
- (UIButton *)goTopBtn{
    if (!_goTopBtn) {
        _goTopBtn = [UIButton new];
        _goTopBtn.hidden = YES;
        [_goTopBtn setImage:[UIImage imageNamed:@"顶部"] forState:UIControlStateNormal];
        [_goTopBtn addTarget:self action:@selector(goTopAction:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _goTopBtn;
}
@end
