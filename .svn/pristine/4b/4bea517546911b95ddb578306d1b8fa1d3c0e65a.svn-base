//
//  WLKTClassifyActivityTVC.m
//  wlkt
//
//  Created by nanbojiaoyu on 2017/12/18.
//  Copyright © 2017年 neimbo. All rights reserved.
//

#import "WLKTClassifyActivityTVC.h"
#import "WLKTClassifyActivityCell.h"
#import "WLKTTableviewRefresh.h"
#import "WLKTClassifyData.h"
#import "WLKTActivityDetailVC.h"
#import "WLKTAppCoordinator.h"
#import "AppDelegate.h"
#import "WLKTOnlineServiceVC.h"
#import "WLKTClassifyFliterBtns.h"
#import "WLKTClassifyHeadView.h"
#import "WLKTSchoolVC.h"
#import "WLKTPolicyPhone.h"

@interface WLKTClassifyActivityTVC ()<ClassifyActivityPhoneDelegate, CLLocationManagerDelegate, ClassifyHeadNaviDelegate, WLKTClassifyFliterBtnsDelegate, UITableViewDelegate, UITableViewDataSource>

@property (nonatomic, strong) CLLocationManager *locationManager;
@property (strong, nonatomic) WLKTClassifyFliterBtns *activityFliterBtns;
@property (strong, nonatomic) WLKTClassifyHeadView *activityHeadView;

@property (strong, nonatomic) WLKTClassifyData *activityData;
@property (nonatomic, assign) CLLocationCoordinate2D currentCoordinate;
@property (nonatomic, assign) ClassifySearchType type;
@property (copy, nonatomic) NSString *typeValue;
@property (copy, nonatomic) NSString *searchText;
@property (strong, nonatomic) NSMutableArray<WLKTCourse *> *dataArr;
@property (nonatomic, assign) NSInteger page;

@end

#define maxOffsetY  200 *ScreenRatio_6

@implementation WLKTClassifyActivityTVC
- (void)viewDidLoad {
    [super viewDidLoad];
    self.page = 1;
    _type = ClassifySearchTypeNone;
    _currentCoordinate.latitude = 0;
    _currentCoordinate.longitude = 0;

    [self.view addSubview:self.tableView];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(removeFliterViewNoti) name:kClassifyFliterViewRemovedByNaviBarBtnNoti object:nil];
    
    [self setRefresh];
    [self setCLLocation];

    [self loadData];
    [self setView];
}

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    //启动跟踪定位
    [self.locationManager startUpdatingLocation];
}

- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    [self.locationManager stopUpdatingLocation];
    self.tableView.state = WLKTViewStateNormal;
}

#pragma mark -
- (void)setView{
    UIView *v = [[UIView alloc]initWithFrame:CGRectMake(0, 0, ScreenWidth, 225 *ScreenRatio_6)];
    [v addSubview:self.activityFliterBtns];
    [v addSubview:self.activityHeadView];
    [self.activityFliterBtns mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.width.mas_equalTo(v);
        make.height.mas_equalTo(40);
    }];
    [self.activityHeadView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_equalTo(self.activityFliterBtns.mas_bottom);
        make.left.width.equalTo(v);
        make.height.mas_equalTo(maxOffsetY);
    }];
    
    self.tableView.tableHeaderView = v;

}

#pragma mark - network
- (void)loadData{
    self.tableView.state = WLKTViewStateLoading;
    WLKTClassifyActivityListApi *api = [[WLKTClassifyActivityListApi alloc]initWithLatitude:[NSString stringWithFormat:@"%lf", self.currentCoordinate.latitude] longitude:[NSString stringWithFormat:@"%lf", self.currentCoordinate.longitude] page:self.page ClassifySearchType:self.type keyword:self.searchText value:self.typeValue];
    [api startWithCompletionBlockWithSuccess:^(__kindof YTKBaseRequest *request) {
        self.tableView.state = WLKTViewStateNormal;
        [self.tableView.mj_header endRefreshing];
        if (self.page == 1) {
            [self.dataArr removeAllObjects];
        }
        NSArray *arr = [NSArray modelArrayWithClass:[WLKTCourse class] json:request.responseJSONObject[@"result"][@"list"]];
        self.activityData = [WLKTClassifyData modelWithJSON:request.responseJSONObject[@"result"]];
        self.activityHeadView.data = self.activityData;
        self.activityFliterBtns.data = self.activityData;
        if (self.page == 1) {
            [self.tableView.mj_footer endRefreshing];
            if (!arr.count) {
                self.tableView.state = WLKTViewStateEmpty;
                self.tableView.imageForStateEmpty = [UIImage imageNamed:@"无内容"];
                self.tableView.titleForStateEmpty = @"无内容";
            }
        }
        else{
            if (arr.count) {
                [self.tableView.mj_footer endRefreshing];
            }
            else{
                [self.tableView.mj_footer endRefreshingWithNoMoreData];
            }
        }
        [self.dataArr addObjectsFromArray:arr];
        [self.tableView reloadData];
        
    } failure:^(__kindof YTKBaseRequest *request) {
        [self.tableView.mj_footer endRefreshing];
        [self.tableView.mj_header endRefreshing];
        self.tableView.state = WLKTViewStateError;
//        WS(weakSelf);
//        self.tableView.emptyButtonClickBlock = ^{
//            [weakSelf loadData];
//        };
    }];
}

- (void)setRefresh{
    WS(weakSelf);
    [WLKTTableviewRefresh tableviewRefreshHeaderWithTaget:self.tableView request:^{
        weakSelf.page = 1;
        weakSelf.searchText = @"";
        weakSelf.typeValue = @"";
        weakSelf.type = ClassifySearchTypeNone;
        [weakSelf.activityFliterBtns resetButtonStatus];
        weakSelf.activityHeadView.currentItem = -1;

        [weakSelf loadData];
    }];
    [WLKTTableviewRefresh tableviewRefreshFooterWithTaget:self.tableView block:^{
        if (weakSelf.dataArr.count) {
            weakSelf.page++;
            [weakSelf loadData];
        }
        else{
            weakSelf.tableView.mj_footer = nil;
        }
    }];
//    [self.tableView.mj_header beginRefreshing];
}

#pragma mark - CoreLocation 代理
-(void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations{
    CLLocation *location = [locations firstObject];//取出第一个位置
    NSDictionary* testdic = BMKConvertBaiduCoorFrom(location.coordinate,BMK_COORDTYPE_GPS);
    self.currentCoordinate = BMKCoorDictionaryDecode(testdic);
    [self loadData];
    //如果不需要实时定位，使用完即关闭定位服务
    [_locationManager stopUpdatingLocation];
}

- (void)setCLLocation{
    if(![CLLocationManager locationServicesEnabled]){
        UIAlertController *al = [UIAlertController alertControllerWithTitle:@"打开[定位服务]来允许[未来课堂]确定您的位置" message:@"请在系统设置中开启定位服务(设置>隐私>定位服务>开启)" preferredStyle:UIAlertControllerStyleAlert];
        UIAlertAction *cancel = [UIAlertAction actionWithTitle:@"否" style:UIAlertActionStyleCancel handler:nil];
        [al addAction:cancel];
        UIAlertAction *def = [UIAlertAction actionWithTitle:@"是" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            //跳转到定位权限页面
            NSURL *url = [NSURL URLWithString:UIApplicationOpenSettingsURLString];
            if( [[UIApplication sharedApplication]canOpenURL:url] ) {
                [[UIApplication sharedApplication] openURL:url];
            }
        }];
        [al addAction:def];
        [self presentViewController:al animated:YES completion:nil];
    }
}

#pragma mark - action
- (void)removeFliterViewNoti{
    [self.activityFliterBtns resetButtonStatus];
}

- (void)goTopAction:(UIButton *)sender{
    [self.tableView scrollToTopAnimated:YES];
}

#pragma mark - Table view data source
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.dataArr.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return ScreenWidth >= 375 ? 315 *ScreenRatio_6 : 285;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    WLKTClassifyActivityCell *cell = [tableView dequeueReusableCellWithIdentifier:@"WLKTClassifyActivityCell"];
    if (cell == nil) {
        cell = [[WLKTClassifyActivityCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"WLKTClassifyActivityCell"];
    }
    cell.delegate = self;
    cell.currentCoordinate = self.currentCoordinate;
    [cell setCellData:self.dataArr[indexPath.row] index:indexPath.row];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    WLKTActivityDetailVC *vc = [[WLKTActivityDetailVC alloc]initWithActivityId:self.dataArr[indexPath.row].uid];
    vc.hidesBottomBarWhenPushed = YES;
    WLKTAppCoordinator *appCoordinator = ((AppDelegate *)[UIApplication sharedApplication].delegate).appCoordinator;
    [appCoordinator.tabBarController.selectedViewController pushViewController:vc animated:YES];
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView{
    [[UIApplication sharedApplication].keyWindow endEditing:YES];

}

#pragma mark - ClassifyCoursePhoneDelegate
- (void)didSelectedClassifyActivityPhone:(ClassifyActivityPhoneType)type index:(NSInteger)index{
    if (type == ClassifyActivityPhoneTypeOnline) {
        WLKTOnlineServiceVC *vc = [[WLKTOnlineServiceVC alloc]init];
        vc.url = self.dataArr[index].kftokenjs;
        vc.hidesBottomBarWhenPushed = YES;
        WLKTAppCoordinator *appCoordinator = ((AppDelegate *)[UIApplication sharedApplication].delegate).appCoordinator;
        [appCoordinator.tabBarController.selectedViewController pushViewController:vc animated:YES];
    }
    //    if (type == ClassifyCoursePhoneTypeOnline && self.dataArr[index].schoolphone.length) {
    //        NSString* str = [NSString stringWithFormat:@"telprompt://%@", self.dataArr[index].schoolphone];
    //        [[UIApplication sharedApplication] openURL:[NSURL URLWithString:str]];
    //    }
    if (type == ClassifyActivityPhoneTypeZiXun && self.dataArr[index].uid.length) {
        [WLKTPolicyPhone policyPhoneWithType:WLKTPolicyPhoneTypeActivity typeId:self.dataArr[index].uid target:self];
        
    }
}

#pragma mark - WLKTClassifyHeadViewDelegate
- (void)didSelectedNaviItemByType:(NSString *)type{
    self.searchText = @"";
    self.typeValue = type;
    
    self.type = ClassifySearchTypeClassify;
    [self.activityFliterBtns resetButtonStatus];
    [self.dataArr removeAllObjects];
    [self loadData];
}

- (void)didSelectedImageWithType:(WLKTBannerListTye)type url:(NSString *)url{
    [[NSNotificationCenter defaultCenter]postNotificationName:kClassifyDidSearchNewDataToClearPageNoti object:nil];
//    if (type == WLKTBannerListTyeCourseDetail) {
//        WLKTCourseDetailVC *vc = [[WLKTCourseDetailVC alloc]initWithCourseId:url];
//        vc.hidesBottomBarWhenPushed = YES;
//        [self.navigationController pushViewController:vc animated:YES];
//    }
    if (type == WLKTBannerListTyeSchool) {
        WLKTSchoolVC *vc = [[WLKTSchoolVC alloc]initWithSchoolId:url];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }
    if (type == WLKTBannerListTyeActivityDetail) {
        WLKTActivityDetailVC *vc = [[WLKTActivityDetailVC alloc]initWithActivityId:url];
        vc.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:vc animated:YES];
    }
}

#pragma mark - FliterButton delegate
- (void)didSelectedFliterButtonWithType:(ClassifySearchType)type value:(NSString *)value completion:(void (^)(void))completion{
    self.searchText = @"";
    self.typeValue = value;
    self.type = type;
    self.activityHeadView.currentItem = -1;
    [self.activityHeadView.classifyCV reloadData];
    [self.dataArr removeAllObjects];
    [self loadData];
    completion();
}

#pragma mark - get
- (UITableView *)tableView{
    if (!_tableView) {
        _tableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, ScreenWidth, ScreenHeight - NavigationBarAndStatusHeight - 50) style:UITableViewStylePlain];
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tableView.dataSource = self;
        _tableView.delegate = self;
    }
    return _tableView;
}
- (WLKTClassifyFliterBtns *)activityFliterBtns{
    if (!_activityFliterBtns) {
        _activityFliterBtns = [[WLKTClassifyFliterBtns alloc]initWithFrame:CGRectNull];
        _activityFliterBtns.delegate = self;
    }
    return _activityFliterBtns;
}
- (WLKTClassifyHeadView *)activityHeadView{
    if (!_activityHeadView) {
        _activityHeadView = [[WLKTClassifyHeadView alloc]initWithFrame:CGRectNull];
        _activityHeadView.delegate = self;
    }
    return _activityHeadView;
}
- (CLLocationManager *)locationManager{
    if (!_locationManager) {
        _locationManager = [[CLLocationManager alloc] init];
        // 版本适配
        if ([[UIDevice currentDevice].systemVersion floatValue] >= 8.0) {
            [_locationManager requestWhenInUseAuthorization];
        }
        //设置代理
        _locationManager.delegate = self;
        //设置定位精度
        _locationManager.desiredAccuracy = kCLLocationAccuracyBest;
        //定位频率,每隔多少米定位一次
        _locationManager.distanceFilter = 10.0;//十米定位一次
    }
    return _locationManager;
}
- (NSMutableArray<WLKTCourse *> *)dataArr{
    if (!_dataArr) {
        _dataArr = [NSMutableArray arrayWithCapacity:10];
    }
    return _dataArr;
}

@end

